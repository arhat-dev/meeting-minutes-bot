// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"github.com/gotd/td/bin"
	"github.com/gotd/td/tdjson"
	"github.com/gotd/td/tdp"
	"github.com/gotd/td/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
	_ = tdjson.Encoder{}
)

// PaymentsRestorePlayMarketReceiptRequest represents TL type `payments.restorePlayMarketReceipt#d164e36a`.
//
// See https://core.telegram.org/method/payments.restorePlayMarketReceipt for reference.
type PaymentsRestorePlayMarketReceiptRequest struct {
	// Receipt field of PaymentsRestorePlayMarketReceiptRequest.
	Receipt []byte
}

// PaymentsRestorePlayMarketReceiptRequestTypeID is TL type id of PaymentsRestorePlayMarketReceiptRequest.
const PaymentsRestorePlayMarketReceiptRequestTypeID = 0xd164e36a

// Ensuring interfaces in compile-time for PaymentsRestorePlayMarketReceiptRequest.
var (
	_ bin.Encoder     = &PaymentsRestorePlayMarketReceiptRequest{}
	_ bin.Decoder     = &PaymentsRestorePlayMarketReceiptRequest{}
	_ bin.BareEncoder = &PaymentsRestorePlayMarketReceiptRequest{}
	_ bin.BareDecoder = &PaymentsRestorePlayMarketReceiptRequest{}
)

func (r *PaymentsRestorePlayMarketReceiptRequest) Zero() bool {
	if r == nil {
		return true
	}
	if !(r.Receipt == nil) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (r *PaymentsRestorePlayMarketReceiptRequest) String() string {
	if r == nil {
		return "PaymentsRestorePlayMarketReceiptRequest(nil)"
	}
	type Alias PaymentsRestorePlayMarketReceiptRequest
	return fmt.Sprintf("PaymentsRestorePlayMarketReceiptRequest%+v", Alias(*r))
}

// FillFrom fills PaymentsRestorePlayMarketReceiptRequest from given interface.
func (r *PaymentsRestorePlayMarketReceiptRequest) FillFrom(from interface {
	GetReceipt() (value []byte)
}) {
	r.Receipt = from.GetReceipt()
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*PaymentsRestorePlayMarketReceiptRequest) TypeID() uint32 {
	return PaymentsRestorePlayMarketReceiptRequestTypeID
}

// TypeName returns name of type in TL schema.
func (*PaymentsRestorePlayMarketReceiptRequest) TypeName() string {
	return "payments.restorePlayMarketReceipt"
}

// TypeInfo returns info about TL type.
func (r *PaymentsRestorePlayMarketReceiptRequest) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "payments.restorePlayMarketReceipt",
		ID:   PaymentsRestorePlayMarketReceiptRequestTypeID,
	}
	if r == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "Receipt",
			SchemaName: "receipt",
		},
	}
	return typ
}

// Encode implements bin.Encoder.
func (r *PaymentsRestorePlayMarketReceiptRequest) Encode(b *bin.Buffer) error {
	if r == nil {
		return fmt.Errorf("can't encode payments.restorePlayMarketReceipt#d164e36a as nil")
	}
	b.PutID(PaymentsRestorePlayMarketReceiptRequestTypeID)
	return r.EncodeBare(b)
}

// EncodeBare implements bin.BareEncoder.
func (r *PaymentsRestorePlayMarketReceiptRequest) EncodeBare(b *bin.Buffer) error {
	if r == nil {
		return fmt.Errorf("can't encode payments.restorePlayMarketReceipt#d164e36a as nil")
	}
	b.PutBytes(r.Receipt)
	return nil
}

// Decode implements bin.Decoder.
func (r *PaymentsRestorePlayMarketReceiptRequest) Decode(b *bin.Buffer) error {
	if r == nil {
		return fmt.Errorf("can't decode payments.restorePlayMarketReceipt#d164e36a to nil")
	}
	if err := b.ConsumeID(PaymentsRestorePlayMarketReceiptRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode payments.restorePlayMarketReceipt#d164e36a: %w", err)
	}
	return r.DecodeBare(b)
}

// DecodeBare implements bin.BareDecoder.
func (r *PaymentsRestorePlayMarketReceiptRequest) DecodeBare(b *bin.Buffer) error {
	if r == nil {
		return fmt.Errorf("can't decode payments.restorePlayMarketReceipt#d164e36a to nil")
	}
	{
		value, err := b.Bytes()
		if err != nil {
			return fmt.Errorf("unable to decode payments.restorePlayMarketReceipt#d164e36a: field receipt: %w", err)
		}
		r.Receipt = value
	}
	return nil
}

// GetReceipt returns value of Receipt field.
func (r *PaymentsRestorePlayMarketReceiptRequest) GetReceipt() (value []byte) {
	if r == nil {
		return
	}
	return r.Receipt
}

// PaymentsRestorePlayMarketReceipt invokes method payments.restorePlayMarketReceipt#d164e36a returning error if any.
//
// See https://core.telegram.org/method/payments.restorePlayMarketReceipt for reference.
func (c *Client) PaymentsRestorePlayMarketReceipt(ctx context.Context, receipt []byte) (UpdatesClass, error) {
	var result UpdatesBox

	request := &PaymentsRestorePlayMarketReceiptRequest{
		Receipt: receipt,
	}
	if err := c.rpc.Invoke(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.Updates, nil
}
